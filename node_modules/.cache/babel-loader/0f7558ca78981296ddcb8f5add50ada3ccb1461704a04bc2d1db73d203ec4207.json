{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _defineProperty = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nexports.LocalWeekYearParser = void 0;\nvar _index = require(\"../../../getWeekYear.js\");\nvar _index2 = require(\"../../../startOfWeek.js\");\nvar _Parser = require(\"../Parser.js\");\nvar _utils = require(\"../utils.js\");\n\n// Local week-numbering year\nvar LocalWeekYearParser = /*#__PURE__*/function (_Parser$Parser) {\n  _inherits(LocalWeekYearParser, _Parser$Parser);\n  var _super = _createSuper(LocalWeekYearParser);\n  function LocalWeekYearParser() {\n    var _this;\n    _classCallCheck(this, LocalWeekYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", [\"y\", \"R\", \"u\", \"Q\", \"q\", \"M\", \"L\", \"I\", \"d\", \"D\", \"i\", \"t\", \"T\"]);\n    return _this;\n  }\n  _createClass(LocalWeekYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === \"YY\"\n        };\n      };\n      switch (token) {\n        case \"Y\":\n          return (0, _utils.mapValue)((0, _utils.parseNDigits)(4, dateString), valueCallback);\n        case \"Yo\":\n          return (0, _utils.mapValue)(match.ordinalNumber(dateString, {\n            unit: \"year\"\n          }), valueCallback);\n        default:\n          return (0, _utils.mapValue)((0, _utils.parseNDigits)(token.length, dateString), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value.isTwoDigitYear || value.year > 0;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value, options) {\n      var currentYear = (0, _index.getWeekYear)(date, options);\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = (0, _utils.normalizeTwoDigitYear)(value.year, currentYear);\n        date.setFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setHours(0, 0, 0, 0);\n        return (0, _index2.startOfWeek)(date, options);\n      }\n      var year = !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setFullYear(year, 0, options.firstWeekContainsDate);\n      date.setHours(0, 0, 0, 0);\n      return (0, _index2.startOfWeek)(date, options);\n    }\n  }]);\n  return LocalWeekYearParser;\n}(_Parser.Parser);\nexports.LocalWeekYearParser = LocalWeekYearParser;","map":{"version":3,"names":["exports","LocalWeekYearParser","_index","require","_index2","_Parser","_utils","dateString","token","match","valueCallback","year","isTwoDigitYear","mapValue","parseNDigits","ordinalNumber","unit","length","_date","value","date","flags","options","currentYear","getWeekYear","normalizedTwoDigitYear","normalizeTwoDigitYear","setFullYear","firstWeekContainsDate","setHours","startOfWeek","era","Parser"],"sources":["C:/Users/Kiran Kumar/Desktop/task/node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js"],"sourcesContent":["\"use strict\";\nexports.LocalWeekYearParser = void 0;\nvar _index = require(\"../../../getWeekYear.js\");\n\nvar _index2 = require(\"../../../startOfWeek.js\");\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\n// Local week-numbering year\nclass LocalWeekYearParser extends _Parser.Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return (0, _utils.mapValue)(\n          (0, _utils.parseNDigits)(4, dateString),\n          valueCallback,\n        );\n      case \"Yo\":\n        return (0, _utils.mapValue)(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return (0, _utils.mapValue)(\n          (0, _utils.parseNDigits)(token.length, dateString),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = (0, _index.getWeekYear)(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = (0, _utils.normalizeTwoDigitYear)(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return (0, _index2.startOfWeek)(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return (0, _index2.startOfWeek)(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\nexports.LocalWeekYearParser = LocalWeekYearParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
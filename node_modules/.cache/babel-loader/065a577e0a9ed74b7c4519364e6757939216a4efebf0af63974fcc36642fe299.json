{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _defineProperty = require(\"C:/Users/Kiran Kumar/Desktop/task/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nexports.QuarterParser = void 0;\nvar _Parser = require(\"../Parser.js\");\nvar _utils = require(\"../utils.js\");\nvar QuarterParser = /*#__PURE__*/function (_Parser$Parser) {\n  _inherits(QuarterParser, _Parser$Parser);\n  var _super = _createSuper(QuarterParser);\n  function QuarterParser() {\n    var _this;\n    _classCallCheck(this, QuarterParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 120);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", [\"Y\", \"R\", \"q\", \"M\", \"L\", \"w\", \"I\", \"d\", \"D\", \"i\", \"e\", \"c\", \"t\", \"T\"]);\n    return _this;\n  }\n  _createClass(QuarterParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case \"Q\":\n        case \"QQ\":\n          // 01, 02, 03, 04\n          return (0, _utils.parseNDigits)(token.length, dateString);\n        // 1st, 2nd, 3rd, 4th\n        case \"Qo\":\n          return match.ordinalNumber(dateString, {\n            unit: \"quarter\"\n          });\n        // Q1, Q2, Q3, Q4\n        case \"QQQ\":\n          return match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case \"QQQQQ\":\n          return match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n        // 1st quarter, 2nd quarter, ...\n        case \"QQQQ\":\n        default:\n          return match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\"\n          }) || match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 4;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setMonth((value - 1) * 3, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return QuarterParser;\n}(_Parser.Parser);\nexports.QuarterParser = QuarterParser;","map":{"version":3,"names":["exports","QuarterParser","_Parser","require","_utils","dateString","token","match","parseNDigits","length","ordinalNumber","unit","quarter","width","context","_date","value","date","_flags","setMonth","setHours","Parser"],"sources":["C:/Users/Kiran Kumar/Desktop/task/node_modules/date-fns/parse/_lib/parsers/QuarterParser.js"],"sourcesContent":["\"use strict\";\nexports.QuarterParser = void 0;\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass QuarterParser extends _Parser.Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return (0, _utils.parseNDigits)(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\nexports.QuarterParser = QuarterParser;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACbA,OAAO,CAACC,aAAa,GAAG,KAAK,CAAC;AAC9B,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAc,CAAC;AAErC,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAa,CAAC;AAAC,IAE9BF,aAAa;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,2DACN,GAAG;IAAA,qEA4DO,CACnB,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;IAAA;EAAA;EAAA;IAAA;IAAA,OAzED,eAAMI,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAE;MAC9B,QAAQD,KAAK;QACX;QACA,KAAK,GAAG;QACR,KAAK,IAAI;UAAE;UACT,OAAO,CAAC,CAAC,EAAEF,MAAM,CAACI,YAAY,EAAEF,KAAK,CAACG,MAAM,EAAEJ,UAAU,CAAC;QAC3D;QACA,KAAK,IAAI;UACP,OAAOE,KAAK,CAACG,aAAa,CAACL,UAAU,EAAE;YAAEM,IAAI,EAAE;UAAU,CAAC,CAAC;QAC7D;QACA,KAAK,KAAK;UACR,OACEJ,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;YACxBQ,KAAK,EAAE,aAAa;YACpBC,OAAO,EAAE;UACX,CAAC,CAAC,IACFP,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;YACxBQ,KAAK,EAAE,QAAQ;YACfC,OAAO,EAAE;UACX,CAAC,CAAC;;QAGN;QACA,KAAK,OAAO;UACV,OAAOP,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;YAC/BQ,KAAK,EAAE,QAAQ;YACfC,OAAO,EAAE;UACX,CAAC,CAAC;QACJ;QACA,KAAK,MAAM;QACX;UACE,OACEP,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;YACxBQ,KAAK,EAAE,MAAM;YACbC,OAAO,EAAE;UACX,CAAC,CAAC,IACFP,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;YACxBQ,KAAK,EAAE,aAAa;YACpBC,OAAO,EAAE;UACX,CAAC,CAAC,IACFP,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;YACxBQ,KAAK,EAAE,QAAQ;YACfC,OAAO,EAAE;UACX,CAAC,CAAC;MACF;IAER;EAAC;IAAA;IAAA,OAED,kBAASC,KAAK,EAAEC,KAAK,EAAE;MACrB,OAAOA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,CAAC;IACjC;EAAC;IAAA;IAAA,OAED,aAAIC,IAAI,EAAEC,MAAM,EAAEF,KAAK,EAAE;MACvBC,IAAI,CAACE,QAAQ,CAAC,CAACH,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;MACjCC,IAAI,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzB,OAAOH,IAAI;IACb;EAAC;EAAA;AAAA,EA3DyBf,OAAO,CAACmB,MAAM;AA8E1CrB,OAAO,CAACC,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}
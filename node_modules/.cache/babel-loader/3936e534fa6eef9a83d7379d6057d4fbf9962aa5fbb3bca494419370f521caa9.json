{"ast":null,"code":"\"use strict\";\n\nexports.sub = sub;\nvar _index = require(\"./subDays.js\");\nvar _index2 = require(\"./subMonths.js\");\nvar _index3 = require(\"./constructFrom.js\");\n\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds subtracted\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nfunction sub(date, duration) {\n  var _duration$years = duration.years,\n    years = _duration$years === void 0 ? 0 : _duration$years,\n    _duration$months = duration.months,\n    months = _duration$months === void 0 ? 0 : _duration$months,\n    _duration$weeks = duration.weeks,\n    weeks = _duration$weeks === void 0 ? 0 : _duration$weeks,\n    _duration$days = duration.days,\n    days = _duration$days === void 0 ? 0 : _duration$days,\n    _duration$hours = duration.hours,\n    hours = _duration$hours === void 0 ? 0 : _duration$hours,\n    _duration$minutes = duration.minutes,\n    minutes = _duration$minutes === void 0 ? 0 : _duration$minutes,\n    _duration$seconds = duration.seconds,\n    seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;\n\n  // Subtract years and months\n  var dateWithoutMonths = (0, _index2.subMonths)(date, months + years * 12);\n\n  // Subtract weeks and days\n  var dateWithoutDays = (0, _index.subDays)(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = (0, _index3.constructFrom)(date, dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","map":{"version":3,"names":["exports","sub","_index","require","_index2","_index3","date","duration","years","months","weeks","days","hours","minutes","seconds","dateWithoutMonths","subMonths","dateWithoutDays","subDays","minutestoSub","secondstoSub","mstoSub","finalDate","constructFrom","getTime"],"sources":["C:/Users/Kiran Kumar/Desktop/task/node_modules/date-fns/sub.js"],"sourcesContent":["\"use strict\";\nexports.sub = sub;\nvar _index = require(\"./subDays.js\");\nvar _index2 = require(\"./subMonths.js\");\n\nvar _index3 = require(\"./constructFrom.js\");\n\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds subtracted\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nfunction sub(date, duration) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  // Subtract years and months\n  const dateWithoutMonths = (0, _index2.subMonths)(date, months + years * 12);\n\n  // Subtract weeks and days\n  const dateWithoutDays = (0, _index.subDays)(\n    dateWithoutMonths,\n    days + weeks * 7,\n  );\n\n  // Subtract hours, minutes and seconds\n  const minutestoSub = minutes + hours * 60;\n  const secondstoSub = seconds + minutestoSub * 60;\n  const mstoSub = secondstoSub * 1000;\n  const finalDate = (0, _index3.constructFrom)(\n    date,\n    dateWithoutDays.getTime() - mstoSub,\n  );\n\n  return finalDate;\n}\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,GAAG,GAAGA,GAAG;AACjB,IAAIC,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC;AACpC,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAEvC,IAAIE,OAAO,GAAGF,OAAO,CAAC,oBAAoB,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,GAAG,CAACK,IAAI,EAAEC,QAAQ,EAAE;EAC3B,sBAQIA,QAAQ,CAPVC,KAAK;IAALA,KAAK,gCAAG,CAAC;IAAA,mBAOPD,QAAQ,CANVE,MAAM;IAANA,MAAM,iCAAG,CAAC;IAAA,kBAMRF,QAAQ,CALVG,KAAK;IAALA,KAAK,gCAAG,CAAC;IAAA,iBAKPH,QAAQ,CAJVI,IAAI;IAAJA,IAAI,+BAAG,CAAC;IAAA,kBAINJ,QAAQ,CAHVK,KAAK;IAALA,KAAK,gCAAG,CAAC;IAAA,oBAGPL,QAAQ,CAFVM,OAAO;IAAPA,OAAO,kCAAG,CAAC;IAAA,oBAETN,QAAQ,CADVO,OAAO;IAAPA,OAAO,kCAAG,CAAC;;EAGb;EACA,IAAMC,iBAAiB,GAAG,CAAC,CAAC,EAAEX,OAAO,CAACY,SAAS,EAAEV,IAAI,EAAEG,MAAM,GAAGD,KAAK,GAAG,EAAE,CAAC;;EAE3E;EACA,IAAMS,eAAe,GAAG,CAAC,CAAC,EAAEf,MAAM,CAACgB,OAAO,EACxCH,iBAAiB,EACjBJ,IAAI,GAAGD,KAAK,GAAG,CAAC,CACjB;;EAED;EACA,IAAMS,YAAY,GAAGN,OAAO,GAAGD,KAAK,GAAG,EAAE;EACzC,IAAMQ,YAAY,GAAGN,OAAO,GAAGK,YAAY,GAAG,EAAE;EAChD,IAAME,OAAO,GAAGD,YAAY,GAAG,IAAI;EACnC,IAAME,SAAS,GAAG,CAAC,CAAC,EAAEjB,OAAO,CAACkB,aAAa,EACzCjB,IAAI,EACJW,eAAe,CAACO,OAAO,EAAE,GAAGH,OAAO,CACpC;EAED,OAAOC,SAAS;AAClB"},"metadata":{},"sourceType":"script","externalDependencies":[]}